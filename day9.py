# -*- coding: utf-8 -*-
"""day9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sU3YU8g1gnj9A6u_KpJKnQLlSqeSH4gz
"""

q1_sales=[23,34,54]
q2_sales=[10,20,30]
q3_sales=[22,43,54]
q4_sales=[12,32,54]
sum(q1_sales+q2_sales+q3_sales+q4_sales)

q1_sales[1]+q2_sales[1]+q3_sales[1]+q4_sales[1]

#numpy = numerical python
#vector calculator , matrix calculation

columns=500
rows=100
elements=columns*rows
elements*elements

#a = [2,3,23,'kamal', [2,3,445]]
#fast_a = [12,4,324,45]

#fast_data = array

# 0 dim =

import numpy as np
print('done')

np.__version__

# read images:
# pil, IPython, matplotlib, opencv

import matplotlib.pyplot as plt
print('done')

arr=plt.imread("/content/133853317815482279.jpg")
print('done')

plt.imshow(arr)

arr.shape

abc=np.array([12,22,32,43])
print(abc)

abc.ndim

arrr_0=np.array(432)
print(arrr_0)
arrr_0.ndim

arr2=np.array([[12,23,43]
              ,[12,23,22]])
print(arr2)
arr2.ndim

arr3 =np.array([[[12,23,43]
               ,[12,23,22]]
               ,
               [[12,23,43]
               ,[12,23,22]]])
print(arr3)
arr3.ndim

arrayyy=np.array([[[1,2,3]]])

arrayyy.shape

arrayy_new=np.array([[[1,2,3],[2,3,4]]])
arrayy_new.shape

arrayy_new1=np.array([[[1,2,3],[2,3,4]],[[1,2,3],[2,3,4]]])
arrayy_new1.shape

array5_3=np.array([[[1,2,3,4,3],[2,3,4,4,3],[1,2,3,4,3],[2,3,4,3,3],[2,3,4,3,3]]
                  ,[[1,2,3,3,3],[2,3,4,3,3],[1,2,3,3,3],[2,3,4,3,3],[2,3,4,3,3]]
                  ,[[1,2,3,3,3],[2,3,4,3,3],[1,2,3,3,3],[2,3,4,3,3],[2,3,4,3,3]]])
array5_3.shape
print(array5_3)

array5_3.size

#5,3,3,5
#3 column
#5 rows
#3 2d array
#5 set of 3 2d array

ar=np.random.randint(1,100,(5,3,3,5))
ar

final_array = np.random.randint(1,50,(3,3,3))

final_array

final_array+100

final_array*10
final_array/5

final_array*10

final_array**0.5

arr=plt.imread("/content/133853317815482279.jpg")
print('done')

plt.imshow(arr+254)

arr.shape

import time
for i in range(1,100):
  print('value of i: ',i)
  plt.imshow(arr+i)
  display(clear=True)
  plt.show()
  time.sleep(2)

import numpy as np
ar_1=np.random.randint(1,10,10)
ar_1

ar_2=np.random.randint(1,10,(3,3))
ar_2

print(ar_2[1,1])

print(ar_2[1,1])

ar_2[0:3:2,0:3:2]=100

ar_2

arr_3 = np.random.randint(1,10,(3,3,3))
arr_3

arr_3[2,0,2]

arr_3

arr_3[0:3,0:3:2,0:3:2]

arr_3[2,:,:]

print(len(dir(np)))

plt.imshow(arr)

arr.shape

arrr1= plt.imshow(arr[:,:,0])

arrr2= plt.imshow(arr[:,:,1])

arrr3= plt.imshow(arr[:,:,2])

arr_copy=arr.copy()

arr_copy[:,:,1]=0

plt.imshow(arr_copy)

arrr1= plt.imshow(arr[:,:,0])
arrr2= plt.imshow(arr[:,:,1])
arrr3= plt.imshow(arr[:,:,2])

arr_copy=arr.copy()
#arr_copy[:,:,0]=10
#arr_copy[:,:,1]=210
arr_copy[:,:,2]=10
plt.imshow(arr_copy)

arr.shape

plt.imshow(arr[520:760,200:760:])

a1=plt.imshow(np.split(arr,2,axis=0))

plt.imshow(arr)
plt.axis('off')
plt.tight_layout()
plt.savefig('house.jpg',dpi=3000)
plt.show()

kitna=4
final_array1=np.concat([arr]*kitna,axis=1)
plt.axis('off')
plt.imshow(np.concat([final_array1]*2))
plt.tight_layout()
plt.savefig('krishna.jpg',dpi=300)
plt.show()

a= np.linspace(-10,10,5)
plt.plot(np.sin(a))
plt.show()

a = np.arange(0,250).reshape(50,5)
print(a)

plt.imshow(np.arange(0,256).reshape(16,16))

sales = np.random.randint(1,1000,(5,5))
sales

sales.max()

sales.min()

sales.sum()

sales.argmax()

sales1 = np.random.randint(1,100,(12,1))
sales1

running_sales=sales1.cumsum()
running_sales

sales1.sort(axis=0)

sales1

sales=np.random.randint(1,1000,(5,5))
print(sales)

sales.min()

sales.argmin()

sales.max()

sales.argmax()

sales.argsort(axis=0)

sales.sort(axis=0)

sales

sales.argsort(axis=0)

sales=np.random.randint(1,1000,(4,4))
sales

np.split(sales,2,axis=1)

