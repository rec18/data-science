# -*- coding: utf-8 -*-
"""krishna_053_test.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QYo8YULTX06vMk2AWJ_QTM6CRGNVDArw
"""



#''' list is a mutable data type which can be initailize through []
# we can change the values in list
# Hetrogenous data can be stored in list
# a=[10,23,44]

#  tuple is a immutable data type which intailize through ()
# we cannot change values in the tuple
# a=(10,20,30)

# if we use input data type in python it takes input from the user and return string data type
# to convert string into integer we well write int
b = input("enter the value")
a= int(input("enter the number"))

#dictionary is mutable datatype which store data in the form of key and values
#in dictionary vales can be changed dictionary initailize through {}
#dictionary can hold hetrogenous data
a ={1:'krishna',2:'abc',3:'rajat'}
print(a)

# for loop is the repeat the same block of code for multiple time for loop takes the (starting index,end index,steps)
# for loop used for iteration

for i in range(0,5):
  print(i)

#exection handling is a process used to remove the unwanted errors which can occur in the code and while running the program 'try' is used provide a block in which we have a doubt that can give a unwanted error
#to handle this situation we use exception handling which contains funtion like try,except and finally
# try : inthis we provide a block code in which we think it can give a unwanted error
#execpt: it is used provide another result and it well that code had some error
#finally: it is used to provide the output whether the try and execpt block works or not

#module is set of class,attribute,funtion and method saved file and can be import through its name and it is used for reuseablity of code and through importing the module we can use the function, method and classes of the module

#oops is used to for security of data and to reusability of code oops has main 4 pilar inheritance,class and object , abstraction , polymorphism
#class is a blue print which do not conatin any memory and object is a instance of a class
# inheritance is a used for resusability of code and in this we can inherit the properities and method of the class
#and there are different typed of inheritence
# polymorphism means same thing different meaning which contains overloading and overridding same name function different meaning
#encapsulation means a epcasul wrapped class with method and instance variable
#example:=
class a
def name(a):
  print(a)

abc=a()



#Q8 don't know

def calculate_area():
  r = int(input("enter the radius"))
  area = 3.14*r*r
  return area

calculate_area()

def intro(name,age):
  print(f'''Hello {name} ,you are {age} years old!!''')

intro("krishna",19)

fruits= ["Mango", "Apple", "Mango" , "Apple", "orange"]

for i, name in enumerate(fruits):
    print(f'''Index {i}: {name}''')

def grade_calculator(score):
    if score >= 90:
        return 'A'
    elif 89<=score >= 80:
        return 'B'
    elif 79<=score >= 70:
        return 'C'
    elif 69<=score >= 60:
        return 'D'
    else:
        return 'F'

grade_calculator(89)

# Q 13 not absent

class bankaccount:
  def __init__(self):
    self.acc_name = "krishna"
    self.starting_balance = 100000

  def deposit_money(self, amount):
    self.acc_namestarting_balance += amount
    return self.starting_balance

  def withdraw_money(self, amount):
    if amount > self.starting_balance:
      return 'insufficient balance'
    self.starting_balance -= amount
    return self.starting_balance

  def current_balance(self):
    return self.starting_balance

abc=bankaccount()

def check_prime(number):
    for i in range(2,number):
        if number % i == 0:
            return 'Not a Prime Number'
            break
            print('Happy Holi')
    else:
        return 'Prime Number'

check_prime(13)













